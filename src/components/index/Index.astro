---
import "./index.scss";
import Instagram from "./Icons/Instagram.astro";
import Tiktok from "./Icons/Tiktok.astro";
import Whatsapp from "./Icons/Whatsapp.astro";

const link = {
	instagram: "https://www.instagram.com/jorgeemilianom/",
	tiktok: "https://www.tiktok.com/@jorgeemilianom",
};
---

<main class="flex flex-column flex-items-center text-center gap-2">
	<div class="logo"></div>
	<h1>Jorge | Software Developer</h1>
	<h2>Desarrollo ideas y doy soluciones mediante c√≥digo.</h2>

	<div
		id="links-container"
		class="flex flex-column flex-items-center text-center gap-2"
	>
		<p>...</p>
	</div>

	<div class="flex flex-column social">
		<a href={link.instagram} target="_blank" class="bton">
			<Whatsapp />
		</a>
		<a href={link.instagram} target="_blank" class="bton">
			<Instagram />
		</a>
		<a href={link.tiktok} target="_blank" class="bton">
			<Tiktok />
		</a>
	</div>
	<div class="text-bottom">GesPrender <br /><span>.com</span></div>
</main>

<script>
	interface ApiResponse {
        message: string;
        data: {
            Links: LinkData[]; // Asumiendo que `Links` es un array de `LinkData` como se esperaba originalmente.
            socialNetwork: { [key: string]: LinkData }; // Corrige para manejar el objeto socialNetwork correctamente.
        };
        status: boolean;
    }

    interface LinkData {
        id: number;
        title: string;
        link: string;
    }
	const protocole:string = globalThis.location.hostname == 'localhost' ? 'http' : 'https';
	fetch(`${protocole}://${globalThis.location.hostname}/api/index.php?link-getall=1`, { method: "GET" })
		.then((response) => response.json())
		.then((objetResponse: ApiResponse) => {
			if(!objetResponse?.status) return;

			let links_container:string = "";
			objetResponse?.data?.Links.map((element: LinkData) => {
				let component:string = `
            <a href="${element?.link}" target="_blank" class="p-2 flex flex-content-center cardlink">
                <div class="cardlink-icon" >
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.5 2.5 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5"/>
                    </svg>
                </div>
                <div class="cardlink-title">${element?.title}</div>
            </a>
            `;
				links_container += component;
			});

			let div_element: HTMLDivElement|null = document.getElementById("links-container") as HTMLDivElement;
			div_element.innerHTML = links_container;
		})
		.catch((error) => {
			console.log(error);
		});
</script>
